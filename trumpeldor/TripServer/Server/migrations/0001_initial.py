# Generated by Django 2.1.2 on 2018-12-21 06:11

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AmericanQuestion',
            fields=[
                ('americanQuestionNumber', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answers', django.contrib.postgres.fields.jsonb.JSONField()),
                ('indexOfCorrectAnswer', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Attraction',
            fields=[
                ('pointNumber', models.AutoField(primary_key=True, serialize=False)),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('description', models.TextField()),
                ('picturesPaths', django.contrib.postgres.fields.jsonb.JSONField()),
                ('videosPaths', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('questionNumber', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('questionNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Feedback')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FeedbackText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
                ('questionNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Feedback')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FilePath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FindTheDifferences',
            fields=[
                ('entertainmentNumber', models.AutoField(primary_key=True, serialize=False)),
                ('picturePath', models.TextField()),
                ('differences', django.contrib.postgres.fields.jsonb.JSONField()),
                ('myAttraction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HintMap',
            fields=[
                ('hintNumber', models.AutoField(primary_key=True, serialize=False)),
                ('mapPicturePath', models.TextField()),
                ('myAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HintPicture',
            fields=[
                ('hintNumber', models.AutoField(primary_key=True, serialize=False)),
                ('picturePath', models.TextField()),
                ('myAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HintText',
            fields=[
                ('hintNumber', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('myAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HintVideo',
            fields=[
                ('hintNumber', models.AutoField(primary_key=True, serialize=False)),
                ('videoPath', models.TextField()),
                ('myAttraction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Puzzle',
            fields=[
                ('entertainmentNumber', models.AutoField(primary_key=True, serialize=False)),
                ('puzzlePicturePath', models.TextField()),
                ('myAttraction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlidingPuzzle',
            fields=[
                ('entertainmentNumber', models.AutoField(primary_key=True, serialize=False)),
                ('piecesPaths', django.contrib.postgres.fields.jsonb.JSONField()),
                ('myAttraction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('trackNumber', models.AutoField(primary_key=True, serialize=False)),
                ('length', models.IntegerField()),
                ('points', models.ManyToManyField(to='Server.Attraction')),
                ('subTrack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Server.Track')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('TripNumber', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField()),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Track')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('socialNetwork', models.TextField()),
                ('playersAges', django.contrib.postgres.fields.jsonb.JSONField()),
                ('lastSeen', models.DateField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('name', 'socialNetwork')},
        ),
        migrations.AddField(
            model_name='trip',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.User'),
        ),
        migrations.AddField(
            model_name='feedbacktext',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Trip'),
        ),
        migrations.AddField(
            model_name='feedbackrating',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Server.Trip'),
        ),
        migrations.AddField(
            model_name='americanquestion',
            name='myAttraction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Server.Attraction'),
        ),
        migrations.AlterUniqueTogether(
            name='feedbacktext',
            unique_together={('questionNumber', 'trip')},
        ),
        migrations.AlterUniqueTogether(
            name='feedbackrating',
            unique_together={('questionNumber', 'trip')},
        ),
    ]
